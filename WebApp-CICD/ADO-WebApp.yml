
trigger: 'none' # will disable CI builds entirely
# - master
pr: none
# - master
# - releases/*

variables:
  SonarCloudOrganization: ''
  SonarCloudProjectKey: ''


stages:
- stage: Build_Stage
  displayName: WebApp_CI

  pool:
    vmImage: windows-2019

  jobs:
  - job: WebApp_CI
    displayName: 'WebApp_CI'
    variables:
      BuildConfiguration: release
    
    steps:
    
    - task: UseDotNet@2
      displayName: Install .NET 6 sdk
      inputs:
        packageType: sdk
        version: 6.0.x
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/WebApp.csproj'
    
    - task: PowerShell@2
      displayName: 'PS : Add Project GUID'
      inputs:
        targetType: 'inline'
        script: |
          $paths = Get-ChildItem -include *.csproj -Recurse
              foreach($pathobject in $paths) 
              {
                  $path = $pathobject.fullname
                  $doc = New-Object System.Xml.XmlDocument
                  $doc.Load($path)
                  $child = $doc.CreateElement("ProjectGuid")
                  $child.InnerText = [guid]::NewGuid().ToString().ToUpper()
                  $node = $doc.SelectSingleNode("//Project/PropertyGroup")
                  $node.AppendChild($child)
                  $doc.Save($path)
              }
        workingDirectory: 'Del/WebAppWithDatabaseDemo-master/WebApp'
    
    
    - task: SonarCloudPrepare@1
      displayName: 'Prepare analysis on SonarCloud'
      inputs:
        SonarCloud: SonarCloud
        organization: $(SonarCloudOrganization)
        projectKey: $(SonarCloudProjectKey)
    
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/WebApp.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*UnitTest*.csproj'
        arguments: '--configuration $(BuildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: True
    
    - task: SonarCloudAnalyze@1
      displayName: 'Run Code Analysis'
    
    - task: SonarCloudPublish@1
      displayName: 'Publish Quality Gate Result'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact (WebApp.zip)'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'

  # - job: Selenium
  #   displayName: 'Build UI Tests'
  #   pool:
  #     vmImage: 'windows-2019'

  #   steps:
  #   - task: NuGetToolInstaller@0
  #     displayName: 'Use NuGet 4.3.0'

  #   - task: NuGetCommand@2
  #     displayName: 'NuGet restore'
  #     inputs:
  #       restoreSolution: WebAppWithDatabase.sln

  #   - task: MSBuild@1
  #     displayName: 'Build project SeleniumUiTests.csproj'
  #     inputs:
  #       solution: SeleniumUiTests/SeleniumUiTests.csproj
  #       msbuildArguments: '/p:OutDir=$(Build.ArtifactStagingDirectory)'

  #   - task: PublishBuildArtifacts@1
  #     displayName: 'Publish Artifact: UI-Test'
  #     inputs:
  #       ArtifactName: 'UI-Test'

- stage: Deploy_Stage
  displayName: WebApp_CD
  dependsOn: Build_Stage

  pool:
    vmImage: windows-2019
  
  jobs:
  - job: WebApp_CD
    displayName: WebApp_CD
    steps:
  
      - task: DownloadBuildArtifacts@1
        inputs:
          buildType: 'current'
          downloadType: 'specific'
          itemPattern: '**/WebApp.zip'
          downloadPath: '$(System.DefaultWorkingDirectory)'
      - task: AzureRmWebAppDeployment@4
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'Azure-SC'
          appType: 'webApp'
          WebAppName: 'Demo-del'
          packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
